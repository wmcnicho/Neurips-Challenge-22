/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py:434: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(dataset_tensor[:, 1, :].clone().detach(), dtype=torch.long)
PermutedDKT
Number of questions:  1855
Number of students:  6468
Number of concepts: 1076
Using batch size: 1
Using batch size: 1
Successfull in data prepration!
Successfully loaded the optimizer
======== Epoch 1 / 200 ========
Training...
Step: 0
tensor([[ 0.0176, -0.0043, -0.0069,  ...,  0.0078, -0.0162, -0.0071],
        [ 0.0013, -0.0143,  0.0060,  ..., -0.0026, -0.0293,  0.0127],
        [ 0.0211, -0.0170,  0.0166,  ...,  0.0090, -0.0208, -0.0270],
        ...,
        [ 0.0150,  0.0151, -0.0164,  ...,  0.0204, -0.0170,  0.0084],
        [-0.0241,  0.0057, -0.0067,  ...,  0.0254,  0.0080, -0.0168],
        [ 0.0233, -0.0070, -0.0070,  ..., -0.0066, -0.0253,  0.0031]],
       device='cuda:0', grad_fn=<BroadcastBackward>)
tensor([[ 0.0176, -0.0043, -0.0069,  ...,  0.0078, -0.0162, -0.0071],
        [ 0.0013, -0.0143,  0.0060,  ..., -0.0026, -0.0293,  0.0127],
        [ 0.0211, -0.0170,  0.0166,  ...,  0.0090, -0.0208, -0.0270],
        ...,
        [ 0.0150,  0.0151, -0.0164,  ...,  0.0204, -0.0170,  0.0084],
        [-0.0241,  0.0057, -0.0067,  ...,  0.0254,  0.0080, -0.0168],
        [ 0.0233, -0.0070, -0.0070,  ..., -0.0066, -0.0253,  0.0031]],
       device='cuda:1', grad_fn=<BroadcastBackward>)
Traceback (most recent call last):
  File "/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py", line 493, in <module>
    main()
  File "/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py", line 478, in main
    model, epoch_train_loss, epoch_val_loss = train(epochs, dkt_model, train_dataloader, val_dataloader, optimizer, scheduler) # add val_dataloader later
  File "/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py", line 347, in train
    loss, acc = model(b_input_ids, b_labels, epoch_i+1)
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 168, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 178, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/parallel/parallel_apply.py", line 86, in parallel_apply
    output.reraise()
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
ValueError: Caught ValueError in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/parallel/parallel_apply.py", line 61, in _worker
    output = module(*input, **kwargs)
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py", line 251, in forward
    raw_loss = self.ce_loss(output, labels.float())
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 714, in forward
    return F.binary_cross_entropy_with_logits(input, target,
  File "/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/functional.py", line 3148, in binary_cross_entropy_with_logits
    raise ValueError("Target size ({}) must be the same as input size ({})".format(target.size(), input.size()))
ValueError: Target size (torch.Size([371, 1])) must be the same as input size (torch.Size([371]))
tensor([[ 0.0176, -0.0043, -0.0069,  ...,  0.0078, -0.0162, -0.0071],
        [ 0.0013, -0.0143,  0.0060,  ..., -0.0026, -0.0293,  0.0127],
        [ 0.0211, -0.0170,  0.0166,  ...,  0.0090, -0.0208, -0.0270],
        ...,
        [ 0.0150,  0.0151, -0.0164,  ...,  0.0204, -0.0170,  0.0084],
        [-0.0241,  0.0057, -0.0067,  ...,  0.0254,  0.0080, -0.0168],
        [ 0.0233, -0.0070, -0.0070,  ..., -0.0066, -0.0253,  0.0031]],
       device='cuda:2', grad_fn=<BroadcastBackward>)
tensor([[ 0.0176, -0.0043, -0.0069,  ...,  0.0078, -0.0162, -0.0071],
        [ 0.0013, -0.0143,  0.0060,  ..., -0.0026, -0.0293,  0.0127],
        [ 0.0211, -0.0170,  0.0166,  ...,  0.0090, -0.0208, -0.0270],
        ...,
        [ 0.0150,  0.0151, -0.0164,  ...,  0.0204, -0.0170,  0.0084],
        [-0.0241,  0.0057, -0.0067,  ...,  0.0254,  0.0080, -0.0168],
        [ 0.0233, -0.0070, -0.0070,  ..., -0.0066, -0.0253,  0.0031]],
       device='cuda:3', grad_fn=<BroadcastBackward>)
tensor([[ 0.0176, -0.0043, -0.0069,  ...,  0.0078, -0.0162, -0.0071],
        [ 0.0013, -0.0143,  0.0060,  ..., -0.0026, -0.0293,  0.0127],
        [ 0.0211, -0.0170,  0.0166,  ...,  0.0090, -0.0208, -0.0270],
        ...,
        [ 0.0150,  0.0151, -0.0164,  ...,  0.0204, -0.0170,  0.0084],
        [-0.0241,  0.0057, -0.0067,  ...,  0.0254,  0.0080, -0.0168],
        [ 0.0233, -0.0070, -0.0070,  ..., -0.0066, -0.0253,  0.0031]],
       device='cuda:4', grad_fn=<BroadcastBackward>)