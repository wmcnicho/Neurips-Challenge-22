/work/nashokkumar_umass_edu/nipschal/Neurips-Challenge-22/predict_graph_embed_small.py:474: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(dataset_tensor[:, 1, :].clone().detach(), dtype=torch.long)
PermutedDKT
Number of questions:  807
Number of students:  4
Number of concepts: 636
Using batch size: 32
Using batch size: 32
AFTER LOADING THE MODEL
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |   14885 KB |   14885 KB |   14885 KB |       0 B  |
|       from large pool |   12644 KB |   12644 KB |   12644 KB |       0 B  |
|       from small pool |    2241 KB |    2241 KB |    2241 KB |       0 B  |
|---------------------------------------------------------------------------|
| Active memory         |   14885 KB |   14885 KB |   14885 KB |       0 B  |
|       from large pool |   12644 KB |   12644 KB |   12644 KB |       0 B  |
|       from small pool |    2241 KB |    2241 KB |    2241 KB |       0 B  |
|---------------------------------------------------------------------------|
| GPU reserved memory   |   24576 KB |   24576 KB |   24576 KB |       0 B  |
|       from large pool |   20480 KB |   20480 KB |   20480 KB |       0 B  |
|       from small pool |    4096 KB |    4096 KB |    4096 KB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |    9691 KB |   19456 KB |   21504 KB |   11813 KB |
|       from large pool |    7836 KB |   18899 KB |   18899 KB |   11063 KB |
|       from small pool |    1855 KB |    1859 KB |    2605 KB |     750 KB |
|---------------------------------------------------------------------------|
| Allocations           |      14    |      14    |      14    |       0    |
|       from large pool |       8    |       8    |       8    |       0    |
|       from small pool |       6    |       6    |       6    |       0    |
|---------------------------------------------------------------------------|
| Active allocs         |      14    |      14    |      14    |       0    |
|       from large pool |       8    |       8    |       8    |       0    |
|       from small pool |       6    |       6    |       6    |       0    |
|---------------------------------------------------------------------------|
| GPU reserved segments |       3    |       3    |       3    |       0    |
|       from large pool |       1    |       1    |       1    |       0    |
|       from small pool |       2    |       2    |       2    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |       3    |       3    |       3    |       0    |
|       from large pool |       1    |       1    |       1    |       0    |
|       from small pool |       2    |       2    |       2    |       0    |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 1                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |       0 B  |       0 B  |       0 B  |       0 B  |
|       from large pool |       0 B  |       0 B  |       0 B  |       0 B  |
|       from small pool |       0 B  |       0 B  |       0 B  |       0 B  |
|---------------------------------------------------------------------------|
| Active memory         |       0 B  |       0 B  |       0 B  |       0 B  |
|       from large pool |       0 B  |       0 B  |       0 B  |       0 B  |
|       from small pool |       0 B  |       0 B  |       0 B  |       0 B  |
|---------------------------------------------------------------------------|
| GPU reserved memory   |       0 B  |       0 B  |       0 B  |       0 B  |
|       from large pool |       0 B  |       0 B  |       0 B  |       0 B  |
|       from small pool |       0 B  |       0 B  |       0 B  |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |       0 B  |       0 B  |       0 B  |       0 B  |
|       from large pool |       0 B  |       0 B  |       0 B  |       0 B  |
|       from small pool |       0 B  |       0 B  |       0 B  |       0 B  |
|---------------------------------------------------------------------------|
| Allocations           |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Active allocs         |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| GPU reserved segments |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |       0    |       0    |       0    |       0    |
|       from large pool |       0    |       0    |       0    |       0    |
|       from small pool |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|
Successfull in data prepration!
Successfully loaded the optimizer
======== Epoch 1 / 10 ========
Training...
Step: 0
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
tensor([[ 2.8974e-03,  3.4293e-03,  2.0447e-03,  ..., -1.1190e-03,
          2.1467e-05, -1.8264e-03],
        [ 3.3009e-03,  1.1693e-03, -3.3589e-03,  ...,  1.4252e-03,
         -1.5523e-03, -2.7005e-03],
        [-2.4899e-03,  2.4137e-03, -9.6183e-04,  ..., -7.8851e-04,
         -2.9701e-03,  1.5478e-03],
        ...,
        [-9.8903e-04, -3.5760e-03,  2.7765e-03,  ...,  1.7900e-03,
         -8.3554e-04, -2.1159e-03],
        [-1.6458e-03, -1.1593e-03, -1.2494e-03,  ..., -1.0617e-03,
         -2.3143e-03,  3.2158e-03],
        [ 2.0415e-03,  2.4007e-03, -3.3205e-03,  ..., -3.7045e-03,
          3.1192e-04,  2.5392e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.8974e-03,  3.4293e-03,  2.0447e-03,  ..., -1.1190e-03,
          2.1467e-05, -1.8264e-03],
        [ 3.3009e-03,  1.1693e-03, -3.3589e-03,  ...,  1.4252e-03,
         -1.5523e-03, -2.7005e-03],
        [-2.4899e-03,  2.4137e-03, -9.6183e-04,  ..., -7.8851e-04,
         -2.9701e-03,  1.5478e-03],
        ...,
        [-9.8903e-04, -3.5760e-03,  2.7765e-03,  ...,  1.7900e-03,
         -8.3554e-04, -2.1159e-03],
        [-1.6458e-03, -1.1593e-03, -1.2494e-03,  ..., -1.0617e-03,
         -2.3143e-03,  3.2158e-03],
        [ 2.0415e-03,  2.4007e-03, -3.3205e-03,  ..., -3.7045e-03,
          3.1192e-04,  2.5392e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
/work/nashokkumar_umass_edu/.conda/envs/nistorch/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6450], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
Parameter containing:
tensor([[ 2.8976e-03,  3.4295e-03,  2.0449e-03,  ..., -1.1192e-03,
          2.1260e-05, -1.8266e-03],
        [ 3.3051e-03,  1.1735e-03, -3.3548e-03,  ...,  1.4211e-03,
         -1.5564e-03, -2.7047e-03],
        [-2.4989e-03,  2.4046e-03, -9.7081e-04,  ..., -7.7952e-04,
         -2.9611e-03,  1.5569e-03],
        ...,
        [-9.8319e-04, -3.5702e-03,  2.7823e-03,  ...,  1.7841e-03,
         -8.4135e-04, -2.1217e-03],
        [-1.6444e-03, -1.1580e-03, -1.2480e-03,  ..., -1.0630e-03,
         -2.3157e-03,  3.2144e-03],
        [ 1.9295e-03,  2.2888e-03, -3.4310e-03,  ..., -3.5940e-03,
          4.2336e-04,  2.6513e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.8976e-03,  3.4295e-03,  2.0449e-03,  ..., -1.1192e-03,
          2.1260e-05, -1.8266e-03],
        [ 3.3051e-03,  1.1735e-03, -3.3548e-03,  ...,  1.4211e-03,
         -1.5564e-03, -2.7047e-03],
        [-2.4989e-03,  2.4046e-03, -9.7081e-04,  ..., -7.7952e-04,
         -2.9611e-03,  1.5569e-03],
        ...,
        [-9.8319e-04, -3.5702e-03,  2.7823e-03,  ...,  1.7841e-03,
         -8.4135e-04, -2.1217e-03],
        [-1.6444e-03, -1.1580e-03, -1.2480e-03,  ..., -1.0630e-03,
         -2.3157e-03,  3.2144e-03],
        [ 1.9295e-03,  2.2888e-03, -3.4310e-03,  ..., -3.5940e-03,
          4.2336e-04,  2.6513e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 2 / 10 ========
Training...
Step: 0
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
tensor([[ 2.8976e-03,  3.4295e-03,  2.0449e-03,  ..., -1.1192e-03,
          2.1260e-05, -1.8266e-03],
        [ 3.3051e-03,  1.1735e-03, -3.3548e-03,  ...,  1.4211e-03,
         -1.5564e-03, -2.7047e-03],
        [-2.4989e-03,  2.4046e-03, -9.7081e-04,  ..., -7.7952e-04,
         -2.9611e-03,  1.5569e-03],
        ...,
        [-9.8319e-04, -3.5702e-03,  2.7823e-03,  ...,  1.7841e-03,
         -8.4135e-04, -2.1217e-03],
        [-1.6444e-03, -1.1580e-03, -1.2480e-03,  ..., -1.0630e-03,
         -2.3157e-03,  3.2144e-03],
        [ 1.9295e-03,  2.2888e-03, -3.4310e-03,  ..., -3.5940e-03,
          4.2336e-04,  2.6513e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.8976e-03,  3.4295e-03,  2.0449e-03,  ..., -1.1192e-03,
          2.1260e-05, -1.8266e-03],
        [ 3.3051e-03,  1.1735e-03, -3.3548e-03,  ...,  1.4211e-03,
         -1.5564e-03, -2.7047e-03],
        [-2.4989e-03,  2.4046e-03, -9.7081e-04,  ..., -7.7952e-04,
         -2.9611e-03,  1.5569e-03],
        ...,
        [-9.8319e-04, -3.5702e-03,  2.7823e-03,  ...,  1.7841e-03,
         -8.4135e-04, -2.1217e-03],
        [-1.6444e-03, -1.1580e-03, -1.2480e-03,  ..., -1.0630e-03,
         -2.3157e-03,  3.2144e-03],
        [ 1.9295e-03,  2.2888e-03, -3.4310e-03,  ..., -3.5940e-03,
          4.2336e-04,  2.6513e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6437], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
Parameter containing:
tensor([[ 2.8980e-03,  3.4299e-03,  2.0453e-03,  ..., -1.1197e-03,
          2.0809e-05, -1.8271e-03],
        [ 3.3088e-03,  1.1772e-03, -3.3511e-03,  ...,  1.4174e-03,
         -1.5601e-03, -2.7083e-03],
        [-2.5003e-03,  2.4032e-03, -9.7224e-04,  ..., -7.7809e-04,
         -2.9597e-03,  1.5583e-03],
        ...,
        [-9.7335e-04, -3.5604e-03,  2.7921e-03,  ...,  1.7743e-03,
         -8.5115e-04, -2.1315e-03],
        [-1.6361e-03, -1.1496e-03, -1.2397e-03,  ..., -1.0713e-03,
         -2.3240e-03,  3.2060e-03],
        [ 1.7282e-03,  2.0877e-03, -3.6307e-03,  ..., -3.3944e-03,
          6.2406e-04,  2.8528e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.8980e-03,  3.4299e-03,  2.0453e-03,  ..., -1.1197e-03,
          2.0809e-05, -1.8271e-03],
        [ 3.3088e-03,  1.1772e-03, -3.3511e-03,  ...,  1.4174e-03,
         -1.5601e-03, -2.7083e-03],
        [-2.5003e-03,  2.4032e-03, -9.7224e-04,  ..., -7.7809e-04,
         -2.9597e-03,  1.5583e-03],
        ...,
        [-9.7335e-04, -3.5604e-03,  2.7921e-03,  ...,  1.7743e-03,
         -8.5115e-04, -2.1315e-03],
        [-1.6361e-03, -1.1496e-03, -1.2397e-03,  ..., -1.0713e-03,
         -2.3240e-03,  3.2060e-03],
        [ 1.7282e-03,  2.0877e-03, -3.6307e-03,  ..., -3.3944e-03,
          6.2406e-04,  2.8528e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 3 / 10 ========
Training...
Step: 0
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
tensor([[ 2.8980e-03,  3.4299e-03,  2.0453e-03,  ..., -1.1197e-03,
          2.0809e-05, -1.8271e-03],
        [ 3.3088e-03,  1.1772e-03, -3.3511e-03,  ...,  1.4174e-03,
         -1.5601e-03, -2.7083e-03],
        [-2.5003e-03,  2.4032e-03, -9.7224e-04,  ..., -7.7809e-04,
         -2.9597e-03,  1.5583e-03],
        ...,
        [-9.7335e-04, -3.5604e-03,  2.7921e-03,  ...,  1.7743e-03,
         -8.5115e-04, -2.1315e-03],
        [-1.6361e-03, -1.1496e-03, -1.2397e-03,  ..., -1.0713e-03,
         -2.3240e-03,  3.2060e-03],
        [ 1.7282e-03,  2.0877e-03, -3.6307e-03,  ..., -3.3944e-03,
          6.2406e-04,  2.8528e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.8980e-03,  3.4299e-03,  2.0453e-03,  ..., -1.1197e-03,
          2.0809e-05, -1.8271e-03],
        [ 3.3088e-03,  1.1772e-03, -3.3511e-03,  ...,  1.4174e-03,
         -1.5601e-03, -2.7083e-03],
        [-2.5003e-03,  2.4032e-03, -9.7224e-04,  ..., -7.7809e-04,
         -2.9597e-03,  1.5583e-03],
        ...,
        [-9.7335e-04, -3.5604e-03,  2.7921e-03,  ...,  1.7743e-03,
         -8.5115e-04, -2.1315e-03],
        [-1.6361e-03, -1.1496e-03, -1.2397e-03,  ..., -1.0713e-03,
         -2.3240e-03,  3.2060e-03],
        [ 1.7282e-03,  2.0877e-03, -3.6307e-03,  ..., -3.3944e-03,
          6.2406e-04,  2.8528e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6425], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
Parameter containing:
tensor([[ 2.8987e-03,  3.4306e-03,  2.0460e-03,  ..., -1.1203e-03,
          2.0156e-05, -1.8277e-03],
        [ 3.3121e-03,  1.1804e-03, -3.3479e-03,  ...,  1.4142e-03,
         -1.5633e-03, -2.7115e-03],
        [-2.4958e-03,  2.4078e-03, -9.6769e-04,  ..., -7.8264e-04,
         -2.9643e-03,  1.5537e-03],
        ...,
        [-9.6058e-04, -3.5478e-03,  2.8049e-03,  ...,  1.7616e-03,
         -8.6388e-04, -2.1442e-03],
        [-1.6225e-03, -1.1360e-03, -1.2262e-03,  ..., -1.0848e-03,
         -2.3375e-03,  3.1922e-03],
        [ 1.5011e-03,  1.8609e-03, -3.8563e-03,  ..., -3.1687e-03,
          8.5060e-04,  3.0799e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.8987e-03,  3.4306e-03,  2.0460e-03,  ..., -1.1203e-03,
          2.0156e-05, -1.8277e-03],
        [ 3.3121e-03,  1.1804e-03, -3.3479e-03,  ...,  1.4142e-03,
         -1.5633e-03, -2.7115e-03],
        [-2.4958e-03,  2.4078e-03, -9.6769e-04,  ..., -7.8264e-04,
         -2.9643e-03,  1.5537e-03],
        ...,
        [-9.6058e-04, -3.5478e-03,  2.8049e-03,  ...,  1.7616e-03,
         -8.6388e-04, -2.1442e-03],
        [-1.6225e-03, -1.1360e-03, -1.2262e-03,  ..., -1.0848e-03,
         -2.3375e-03,  3.1922e-03],
        [ 1.5011e-03,  1.8609e-03, -3.8563e-03,  ..., -3.1687e-03,
          8.5060e-04,  3.0799e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 4 / 10 ========
Training...
Step: 0
batch input size:batch input size: torch.Size([1, 807]) Device: 0
 torch.Size([1, 807]) Device: 1
tensor([[ 2.8987e-03,  3.4306e-03,  2.0460e-03,  ..., -1.1203e-03,
          2.0156e-05, -1.8277e-03],
        [ 3.3121e-03,  1.1804e-03, -3.3479e-03,  ...,  1.4142e-03,
         -1.5633e-03, -2.7115e-03],
        [-2.4958e-03,  2.4078e-03, -9.6769e-04,  ..., -7.8264e-04,
         -2.9643e-03,  1.5537e-03],
        ...,
        [-9.6058e-04, -3.5478e-03,  2.8049e-03,  ...,  1.7616e-03,
         -8.6388e-04, -2.1442e-03],
        [-1.6225e-03, -1.1360e-03, -1.2262e-03,  ..., -1.0848e-03,
         -2.3375e-03,  3.1922e-03],
        [ 1.5011e-03,  1.8609e-03, -3.8563e-03,  ..., -3.1687e-03,
          8.5060e-04,  3.0799e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.8987e-03,  3.4306e-03,  2.0460e-03,  ..., -1.1203e-03,
          2.0156e-05, -1.8277e-03],
        [ 3.3121e-03,  1.1804e-03, -3.3479e-03,  ...,  1.4142e-03,
         -1.5633e-03, -2.7115e-03],
        [-2.4958e-03,  2.4078e-03, -9.6769e-04,  ..., -7.8264e-04,
         -2.9643e-03,  1.5537e-03],
        ...,
        [-9.6058e-04, -3.5478e-03,  2.8049e-03,  ...,  1.7616e-03,
         -8.6388e-04, -2.1442e-03],
        [-1.6225e-03, -1.1360e-03, -1.2262e-03,  ..., -1.0848e-03,
         -2.3375e-03,  3.1922e-03],
        [ 1.5011e-03,  1.8609e-03, -3.8563e-03,  ..., -3.1687e-03,
          8.5060e-04,  3.0799e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6415], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807]) batch input size:Device:  torch.Size([1, 807])0
Device: 1
Parameter containing:
tensor([[ 2.8995e-03,  3.4314e-03,  2.0467e-03,  ..., -1.1211e-03,
          1.9347e-05, -1.8285e-03],
        [ 3.3150e-03,  1.1832e-03, -3.3451e-03,  ...,  1.4113e-03,
         -1.5661e-03, -2.7144e-03],
        [-2.4867e-03,  2.4168e-03, -9.5872e-04,  ..., -7.9161e-04,
         -2.9732e-03,  1.5446e-03],
        ...,
        [-9.4589e-04, -3.5332e-03,  2.8195e-03,  ...,  1.7469e-03,
         -8.7853e-04, -2.1589e-03],
        [-1.6052e-03, -1.1188e-03, -1.2090e-03,  ..., -1.1020e-03,
         -2.3547e-03,  3.1747e-03],
        [ 1.2749e-03,  1.6348e-03, -4.0814e-03,  ..., -2.9436e-03,
          1.0764e-03,  3.3062e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.8995e-03,  3.4314e-03,  2.0467e-03,  ..., -1.1211e-03,
          1.9347e-05, -1.8285e-03],
        [ 3.3150e-03,  1.1832e-03, -3.3451e-03,  ...,  1.4113e-03,
         -1.5661e-03, -2.7144e-03],
        [-2.4867e-03,  2.4168e-03, -9.5872e-04,  ..., -7.9161e-04,
         -2.9732e-03,  1.5446e-03],
        ...,
        [-9.4589e-04, -3.5332e-03,  2.8195e-03,  ...,  1.7469e-03,
         -8.7853e-04, -2.1589e-03],
        [-1.6052e-03, -1.1188e-03, -1.2090e-03,  ..., -1.1020e-03,
         -2.3547e-03,  3.1747e-03],
        [ 1.2749e-03,  1.6348e-03, -4.0814e-03,  ..., -2.9436e-03,
          1.0764e-03,  3.3062e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 5 / 10 ========
Training...
Step: 0
batch input size: batch input size:torch.Size([1, 807])  torch.Size([1, 807])Device:  Device: 01
tensor([[ 2.8995e-03,  3.4314e-03,  2.0467e-03,  ..., -1.1211e-03,
          1.9347e-05, -1.8285e-03],
        [ 3.3150e-03,  1.1832e-03, -3.3451e-03,  ...,  1.4113e-03,
         -1.5661e-03, -2.7144e-03],
        [-2.4867e-03,  2.4168e-03, -9.5872e-04,  ..., -7.9161e-04,
         -2.9732e-03,  1.5446e-03],
        ...,
        [-9.4589e-04, -3.5332e-03,  2.8195e-03,  ...,  1.7469e-03,
         -8.7853e-04, -2.1589e-03],
        [-1.6052e-03, -1.1188e-03, -1.2090e-03,  ..., -1.1020e-03,
         -2.3547e-03,  3.1747e-03],
        [ 1.2749e-03,  1.6348e-03, -4.0814e-03,  ..., -2.9436e-03,
          1.0764e-03,  3.3062e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.8995e-03,  3.4314e-03,  2.0467e-03,  ..., -1.1211e-03,
          1.9347e-05, -1.8285e-03],
        [ 3.3150e-03,  1.1832e-03, -3.3451e-03,  ...,  1.4113e-03,
         -1.5661e-03, -2.7144e-03],
        [-2.4867e-03,  2.4168e-03, -9.5872e-04,  ..., -7.9161e-04,
         -2.9732e-03,  1.5446e-03],
        ...,
        [-9.4589e-04, -3.5332e-03,  2.8195e-03,  ...,  1.7469e-03,
         -8.7853e-04, -2.1589e-03],
        [-1.6052e-03, -1.1188e-03, -1.2090e-03,  ..., -1.1020e-03,
         -2.3547e-03,  3.1747e-03],
        [ 1.2749e-03,  1.6348e-03, -4.0814e-03,  ..., -2.9436e-03,
          1.0764e-03,  3.3062e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6405], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size:batch input size:  torch.Size([1, 807])torch.Size([1, 807])  Device:Device:  01
Parameter containing:
tensor([[ 2.9004e-03,  3.4323e-03,  2.0476e-03,  ..., -1.1220e-03,
          1.8438e-05, -1.8295e-03],
        [ 3.3174e-03,  1.1857e-03, -3.3427e-03,  ...,  1.4089e-03,
         -1.5685e-03, -2.7168e-03],
        [-2.4748e-03,  2.4288e-03, -9.4686e-04,  ..., -8.0348e-04,
         -2.9851e-03,  1.5326e-03],
        ...,
        [-9.3030e-04, -3.5177e-03,  2.8351e-03,  ...,  1.7313e-03,
         -8.9407e-04, -2.1744e-03],
        [-1.5859e-03, -1.0995e-03, -1.1898e-03,  ..., -1.1212e-03,
         -2.3739e-03,  3.1552e-03],
        [ 1.0638e-03,  1.4238e-03, -4.2916e-03,  ..., -2.7334e-03,
          1.2872e-03,  3.5174e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9004e-03,  3.4323e-03,  2.0476e-03,  ..., -1.1220e-03,
          1.8438e-05, -1.8295e-03],
        [ 3.3174e-03,  1.1857e-03, -3.3427e-03,  ...,  1.4089e-03,
         -1.5685e-03, -2.7168e-03],
        [-2.4748e-03,  2.4288e-03, -9.4686e-04,  ..., -8.0348e-04,
         -2.9851e-03,  1.5326e-03],
        ...,
        [-9.3030e-04, -3.5177e-03,  2.8351e-03,  ...,  1.7313e-03,
         -8.9407e-04, -2.1744e-03],
        [-1.5859e-03, -1.0995e-03, -1.1898e-03,  ..., -1.1212e-03,
         -2.3739e-03,  3.1552e-03],
        [ 1.0638e-03,  1.4238e-03, -4.2916e-03,  ..., -2.7334e-03,
          1.2872e-03,  3.5174e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 6 / 10 ========
Training...
Step: 0
batch input size: batch input size:torch.Size([1, 807])  torch.Size([1, 807])Device:  Device:0
1
tensor([[ 2.9004e-03,  3.4323e-03,  2.0476e-03,  ..., -1.1220e-03,
          1.8438e-05, -1.8295e-03],
        [ 3.3174e-03,  1.1857e-03, -3.3427e-03,  ...,  1.4089e-03,
         -1.5685e-03, -2.7168e-03],
        [-2.4748e-03,  2.4288e-03, -9.4686e-04,  ..., -8.0348e-04,
         -2.9851e-03,  1.5326e-03],
        ...,
        [-9.3030e-04, -3.5177e-03,  2.8351e-03,  ...,  1.7313e-03,
         -8.9407e-04, -2.1744e-03],
        [-1.5859e-03, -1.0995e-03, -1.1898e-03,  ..., -1.1212e-03,
         -2.3739e-03,  3.1552e-03],
        [ 1.0638e-03,  1.4238e-03, -4.2916e-03,  ..., -2.7334e-03,
          1.2872e-03,  3.5174e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.9004e-03,  3.4323e-03,  2.0476e-03,  ..., -1.1220e-03,
          1.8438e-05, -1.8295e-03],
        [ 3.3174e-03,  1.1857e-03, -3.3427e-03,  ...,  1.4089e-03,
         -1.5685e-03, -2.7168e-03],
        [-2.4748e-03,  2.4288e-03, -9.4686e-04,  ..., -8.0348e-04,
         -2.9851e-03,  1.5326e-03],
        ...,
        [-9.3030e-04, -3.5177e-03,  2.8351e-03,  ...,  1.7313e-03,
         -8.9407e-04, -2.1744e-03],
        [-1.5859e-03, -1.0995e-03, -1.1898e-03,  ..., -1.1212e-03,
         -2.3739e-03,  3.1552e-03],
        [ 1.0638e-03,  1.4238e-03, -4.2916e-03,  ..., -2.7334e-03,
          1.2872e-03,  3.5174e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6396], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807]) Device:batch input size:  0torch.Size([1, 807])
 Device: 1
Parameter containing:
tensor([[ 2.9013e-03,  3.4332e-03,  2.0486e-03,  ..., -1.1229e-03,
          1.7493e-05, -1.8304e-03],
        [ 3.3195e-03,  1.1877e-03, -3.3407e-03,  ...,  1.4069e-03,
         -1.5706e-03, -2.7188e-03],
        [-2.4615e-03,  2.4422e-03, -9.3358e-04,  ..., -8.1676e-04,
         -2.9984e-03,  1.5191e-03],
        ...,
        [-9.1486e-04, -3.5024e-03,  2.8505e-03,  ...,  1.7159e-03,
         -9.0947e-04, -2.1899e-03],
        [-1.5661e-03, -1.0798e-03, -1.1702e-03,  ..., -1.1408e-03,
         -2.3936e-03,  3.1353e-03],
        [ 8.7656e-04,  1.2366e-03, -4.4782e-03,  ..., -2.5468e-03,
          1.4743e-03,  3.7048e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9013e-03,  3.4332e-03,  2.0486e-03,  ..., -1.1229e-03,
          1.7493e-05, -1.8304e-03],
        [ 3.3195e-03,  1.1877e-03, -3.3407e-03,  ...,  1.4069e-03,
         -1.5706e-03, -2.7188e-03],
        [-2.4615e-03,  2.4422e-03, -9.3358e-04,  ..., -8.1676e-04,
         -2.9984e-03,  1.5191e-03],
        ...,
        [-9.1486e-04, -3.5024e-03,  2.8505e-03,  ...,  1.7159e-03,
         -9.0947e-04, -2.1899e-03],
        [-1.5661e-03, -1.0798e-03, -1.1702e-03,  ..., -1.1408e-03,
         -2.3936e-03,  3.1353e-03],
        [ 8.7656e-04,  1.2366e-03, -4.4782e-03,  ..., -2.5468e-03,
          1.4743e-03,  3.7048e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 7 / 10 ========
Training...
Step: 0
batch input size: batch input size:torch.Size([1, 807])  torch.Size([1, 807])Device:  Device:0
1
tensor([[ 2.9013e-03,  3.4332e-03,  2.0486e-03,  ..., -1.1229e-03,
          1.7493e-05, -1.8304e-03],
        [ 3.3195e-03,  1.1877e-03, -3.3407e-03,  ...,  1.4069e-03,
         -1.5706e-03, -2.7188e-03],
        [-2.4615e-03,  2.4422e-03, -9.3358e-04,  ..., -8.1676e-04,
         -2.9984e-03,  1.5191e-03],
        ...,
        [-9.1486e-04, -3.5024e-03,  2.8505e-03,  ...,  1.7159e-03,
         -9.0947e-04, -2.1899e-03],
        [-1.5661e-03, -1.0798e-03, -1.1702e-03,  ..., -1.1408e-03,
         -2.3936e-03,  3.1353e-03],
        [ 8.7656e-04,  1.2366e-03, -4.4782e-03,  ..., -2.5468e-03,
          1.4743e-03,  3.7048e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.9013e-03,  3.4332e-03,  2.0486e-03,  ..., -1.1229e-03,
          1.7493e-05, -1.8304e-03],
        [ 3.3195e-03,  1.1877e-03, -3.3407e-03,  ...,  1.4069e-03,
         -1.5706e-03, -2.7188e-03],
        [-2.4615e-03,  2.4422e-03, -9.3358e-04,  ..., -8.1676e-04,
         -2.9984e-03,  1.5191e-03],
        ...,
        [-9.1486e-04, -3.5024e-03,  2.8505e-03,  ...,  1.7159e-03,
         -9.0947e-04, -2.1899e-03],
        [-1.5661e-03, -1.0798e-03, -1.1702e-03,  ..., -1.1408e-03,
         -2.3936e-03,  3.1353e-03],
        [ 8.7656e-04,  1.2366e-03, -4.4782e-03,  ..., -2.5468e-03,
          1.4743e-03,  3.7048e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6389], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807])batch input size:  Device:torch.Size([1, 807])  0Device:
 1
Parameter containing:
tensor([[ 2.9023e-03,  3.4342e-03,  2.0494e-03,  ..., -1.1238e-03,
          1.6583e-05, -1.8313e-03],
        [ 3.3211e-03,  1.1894e-03, -3.3391e-03,  ...,  1.4052e-03,
         -1.5722e-03, -2.7205e-03],
        [-2.4482e-03,  2.4556e-03, -9.2037e-04,  ..., -8.2998e-04,
         -3.0116e-03,  1.5057e-03],
        ...,
        [-9.0060e-04, -3.4882e-03,  2.8648e-03,  ...,  1.7017e-03,
         -9.2369e-04, -2.2041e-03],
        [-1.5475e-03, -1.0612e-03, -1.1517e-03,  ..., -1.1593e-03,
         -2.4121e-03,  3.1165e-03],
        [ 7.1928e-04,  1.0794e-03, -4.6350e-03,  ..., -2.3900e-03,
          1.6314e-03,  3.8621e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9023e-03,  3.4342e-03,  2.0494e-03,  ..., -1.1238e-03,
          1.6583e-05, -1.8313e-03],
        [ 3.3211e-03,  1.1894e-03, -3.3391e-03,  ...,  1.4052e-03,
         -1.5722e-03, -2.7205e-03],
        [-2.4482e-03,  2.4556e-03, -9.2037e-04,  ..., -8.2998e-04,
         -3.0116e-03,  1.5057e-03],
        ...,
        [-9.0060e-04, -3.4882e-03,  2.8648e-03,  ...,  1.7017e-03,
         -9.2369e-04, -2.2041e-03],
        [-1.5475e-03, -1.0612e-03, -1.1517e-03,  ..., -1.1593e-03,
         -2.4121e-03,  3.1165e-03],
        [ 7.1928e-04,  1.0794e-03, -4.6350e-03,  ..., -2.3900e-03,
          1.6314e-03,  3.8621e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 8 / 10 ========
Training...
Step: 0
batch input size: batch input size:torch.Size([1, 807])  torch.Size([1, 807])Device:  Device:0
 1
tensor([[ 2.9023e-03,  3.4342e-03,  2.0494e-03,  ..., -1.1238e-03,
          1.6583e-05, -1.8313e-03],
        [ 3.3211e-03,  1.1894e-03, -3.3391e-03,  ...,  1.4052e-03,
         -1.5722e-03, -2.7205e-03],
        [-2.4482e-03,  2.4556e-03, -9.2037e-04,  ..., -8.2998e-04,
         -3.0116e-03,  1.5057e-03],
        ...,
        [-9.0060e-04, -3.4882e-03,  2.8648e-03,  ...,  1.7017e-03,
         -9.2369e-04, -2.2041e-03],
        [-1.5475e-03, -1.0612e-03, -1.1517e-03,  ..., -1.1593e-03,
         -2.4121e-03,  3.1165e-03],
        [ 7.1928e-04,  1.0794e-03, -4.6350e-03,  ..., -2.3900e-03,
          1.6314e-03,  3.8621e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.9023e-03,  3.4342e-03,  2.0494e-03,  ..., -1.1238e-03,
          1.6583e-05, -1.8313e-03],
        [ 3.3211e-03,  1.1894e-03, -3.3391e-03,  ...,  1.4052e-03,
         -1.5722e-03, -2.7205e-03],
        [-2.4482e-03,  2.4556e-03, -9.2037e-04,  ..., -8.2998e-04,
         -3.0116e-03,  1.5057e-03],
        ...,
        [-9.0060e-04, -3.4882e-03,  2.8648e-03,  ...,  1.7017e-03,
         -9.2369e-04, -2.2041e-03],
        [-1.5475e-03, -1.0612e-03, -1.1517e-03,  ..., -1.1593e-03,
         -2.4121e-03,  3.1165e-03],
        [ 7.1928e-04,  1.0794e-03, -4.6350e-03,  ..., -2.3900e-03,
          1.6314e-03,  3.8621e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6383], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807]) Device: batch input size:0
torch.Size([1, 807]) Device: 1
Parameter containing:
tensor([[ 2.9031e-03,  3.4350e-03,  2.0502e-03,  ..., -1.1246e-03,
          1.5784e-05, -1.8321e-03],
        [ 3.3224e-03,  1.1906e-03, -3.3379e-03,  ...,  1.4040e-03,
         -1.5734e-03, -2.7217e-03],
        [-2.4364e-03,  2.4674e-03, -9.0863e-04,  ..., -8.4173e-04,
         -3.0233e-03,  1.4938e-03],
        ...,
        [-8.8856e-04, -3.4762e-03,  2.8768e-03,  ...,  1.6896e-03,
         -9.3570e-04, -2.2161e-03],
        [-1.5316e-03, -1.0453e-03, -1.1359e-03,  ..., -1.1752e-03,
         -2.4280e-03,  3.1005e-03],
        [ 5.9656e-04,  9.5675e-04, -4.7574e-03,  ..., -2.2676e-03,
          1.7540e-03,  3.9849e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9031e-03,  3.4350e-03,  2.0502e-03,  ..., -1.1246e-03,
          1.5784e-05, -1.8321e-03],
        [ 3.3224e-03,  1.1906e-03, -3.3379e-03,  ...,  1.4040e-03,
         -1.5734e-03, -2.7217e-03],
        [-2.4364e-03,  2.4674e-03, -9.0863e-04,  ..., -8.4173e-04,
         -3.0233e-03,  1.4938e-03],
        ...,
        [-8.8856e-04, -3.4762e-03,  2.8768e-03,  ...,  1.6896e-03,
         -9.3570e-04, -2.2161e-03],
        [-1.5316e-03, -1.0453e-03, -1.1359e-03,  ..., -1.1752e-03,
         -2.4280e-03,  3.1005e-03],
        [ 5.9656e-04,  9.5675e-04, -4.7574e-03,  ..., -2.2676e-03,
          1.7540e-03,  3.9849e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 9 / 10 ========
Training...
Step: 0
batch input size: batch input size:torch.Size([1, 807])  torch.Size([1, 807])Device:  Device:0
1
tensor([[ 2.9031e-03,  3.4350e-03,  2.0502e-03,  ..., -1.1246e-03,
          1.5784e-05, -1.8321e-03],
        [ 3.3224e-03,  1.1906e-03, -3.3379e-03,  ...,  1.4040e-03,
         -1.5734e-03, -2.7217e-03],
        [-2.4364e-03,  2.4674e-03, -9.0863e-04,  ..., -8.4173e-04,
         -3.0233e-03,  1.4938e-03],
        ...,
        [-8.8856e-04, -3.4762e-03,  2.8768e-03,  ...,  1.6896e-03,
         -9.3570e-04, -2.2161e-03],
        [-1.5316e-03, -1.0453e-03, -1.1359e-03,  ..., -1.1752e-03,
         -2.4280e-03,  3.1005e-03],
        [ 5.9656e-04,  9.5675e-04, -4.7574e-03,  ..., -2.2676e-03,
          1.7540e-03,  3.9849e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.9031e-03,  3.4350e-03,  2.0502e-03,  ..., -1.1246e-03,
          1.5784e-05, -1.8321e-03],
        [ 3.3224e-03,  1.1906e-03, -3.3379e-03,  ...,  1.4040e-03,
         -1.5734e-03, -2.7217e-03],
        [-2.4364e-03,  2.4674e-03, -9.0863e-04,  ..., -8.4173e-04,
         -3.0233e-03,  1.4938e-03],
        ...,
        [-8.8856e-04, -3.4762e-03,  2.8768e-03,  ...,  1.6896e-03,
         -9.3570e-04, -2.2161e-03],
        [-1.5316e-03, -1.0453e-03, -1.1359e-03,  ..., -1.1752e-03,
         -2.4280e-03,  3.1005e-03],
        [ 5.9656e-04,  9.5675e-04, -4.7574e-03,  ..., -2.2676e-03,
          1.7540e-03,  3.9849e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6379], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807]) Device: 0
batch input size: torch.Size([1, 807]) Device: 1
Parameter containing:
tensor([[ 2.9037e-03,  3.4356e-03,  2.0508e-03,  ..., -1.1252e-03,
          1.5178e-05, -1.8327e-03],
        [ 3.3232e-03,  1.1914e-03, -3.3371e-03,  ...,  1.4032e-03,
         -1.5743e-03, -2.7225e-03],
        [-2.4274e-03,  2.4765e-03, -8.9967e-04,  ..., -8.5069e-04,
         -3.0323e-03,  1.4848e-03],
        ...,
        [-8.7969e-04, -3.4674e-03,  2.8857e-03,  ...,  1.6808e-03,
         -9.4455e-04, -2.2250e-03],
        [-1.5198e-03, -1.0335e-03, -1.1241e-03,  ..., -1.1869e-03,
         -2.4398e-03,  3.0885e-03],
        [ 5.1200e-04,  8.7222e-04, -4.8417e-03,  ..., -2.1832e-03,
          1.8385e-03,  4.0695e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9037e-03,  3.4356e-03,  2.0508e-03,  ..., -1.1252e-03,
          1.5178e-05, -1.8327e-03],
        [ 3.3232e-03,  1.1914e-03, -3.3371e-03,  ...,  1.4032e-03,
         -1.5743e-03, -2.7225e-03],
        [-2.4274e-03,  2.4765e-03, -8.9967e-04,  ..., -8.5069e-04,
         -3.0323e-03,  1.4848e-03],
        ...,
        [-8.7969e-04, -3.4674e-03,  2.8857e-03,  ...,  1.6808e-03,
         -9.4455e-04, -2.2250e-03],
        [-1.5198e-03, -1.0335e-03, -1.1241e-03,  ..., -1.1869e-03,
         -2.4398e-03,  3.0885e-03],
        [ 5.1200e-04,  8.7222e-04, -4.8417e-03,  ..., -2.1832e-03,
          1.8385e-03,  4.0695e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
======== Epoch 10 / 10 ========
Training...
Step: 0
batch input size: torch.Size([1, 807])batch input size: Device:  torch.Size([1, 807])0
Device: 1
tensor([[ 2.9037e-03,  3.4356e-03,  2.0508e-03,  ..., -1.1252e-03,
          1.5178e-05, -1.8327e-03],
        [ 3.3232e-03,  1.1914e-03, -3.3371e-03,  ...,  1.4032e-03,
         -1.5743e-03, -2.7225e-03],
        [-2.4274e-03,  2.4765e-03, -8.9967e-04,  ..., -8.5069e-04,
         -3.0323e-03,  1.4848e-03],
        ...,
        [-8.7969e-04, -3.4674e-03,  2.8857e-03,  ...,  1.6808e-03,
         -9.4455e-04, -2.2250e-03],
        [-1.5198e-03, -1.0335e-03, -1.1241e-03,  ..., -1.1869e-03,
         -2.4398e-03,  3.0885e-03],
        [ 5.1200e-04,  8.7222e-04, -4.8417e-03,  ..., -2.1832e-03,
          1.8385e-03,  4.0695e-03]], device='cuda:1',
       grad_fn=<BroadcastBackward>)
tensor([[ 2.9037e-03,  3.4356e-03,  2.0508e-03,  ..., -1.1252e-03,
          1.5178e-05, -1.8327e-03],
        [ 3.3232e-03,  1.1914e-03, -3.3371e-03,  ...,  1.4032e-03,
         -1.5743e-03, -2.7225e-03],
        [-2.4274e-03,  2.4765e-03, -8.9967e-04,  ..., -8.5069e-04,
         -3.0323e-03,  1.4848e-03],
        ...,
        [-8.7969e-04, -3.4674e-03,  2.8857e-03,  ...,  1.6808e-03,
         -9.4455e-04, -2.2250e-03],
        [-1.5198e-03, -1.0335e-03, -1.1241e-03,  ..., -1.1869e-03,
         -2.4398e-03,  3.0885e-03],
        [ 5.1200e-04,  8.7222e-04, -4.8417e-03,  ..., -2.1832e-03,
          1.8385e-03,  4.0695e-03]], device='cuda:0',
       grad_fn=<BroadcastBackward>)
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
step loss: tensor([0.0009, 0.6376], device='cuda:0', grad_fn=<GatherBackward>)
  Average training loss: 0.32
batch input size: torch.Size([1, 807]) Device: 0
batch input size: torch.Size([1, 807]) Device: 1
Parameter containing:
tensor([[ 2.9041e-03,  3.4360e-03,  2.0512e-03,  ..., -1.1256e-03,
          1.4758e-05, -1.8331e-03],
        [ 3.3237e-03,  1.1919e-03, -3.3366e-03,  ...,  1.4027e-03,
         -1.5747e-03, -2.7230e-03],
        [-2.4214e-03,  2.4826e-03, -8.9367e-04,  ..., -8.5670e-04,
         -3.0383e-03,  1.4787e-03],
        ...,
        [-8.7395e-04, -3.4618e-03,  2.8914e-03,  ...,  1.6750e-03,
         -9.5027e-04, -2.2307e-03],
        [-1.5121e-03, -1.0259e-03, -1.1165e-03,  ..., -1.1946e-03,
         -2.4474e-03,  3.0808e-03],
        [ 4.6958e-04,  8.2981e-04, -4.8841e-03,  ..., -2.1408e-03,
          1.8809e-03,  4.1119e-03]], device='cuda:0', requires_grad=True)
tensor([[ 2.9041e-03,  3.4360e-03,  2.0512e-03,  ..., -1.1256e-03,
          1.4758e-05, -1.8331e-03],
        [ 3.3237e-03,  1.1919e-03, -3.3366e-03,  ...,  1.4027e-03,
         -1.5747e-03, -2.7230e-03],
        [-2.4214e-03,  2.4826e-03, -8.9367e-04,  ..., -8.5670e-04,
         -3.0383e-03,  1.4787e-03],
        ...,
        [-8.7395e-04, -3.4618e-03,  2.8914e-03,  ...,  1.6750e-03,
         -9.5027e-04, -2.2307e-03],
        [-1.5121e-03, -1.0259e-03, -1.1165e-03,  ..., -1.1946e-03,
         -2.4474e-03,  3.0808e-03],
        [ 4.6958e-04,  8.2981e-04, -4.8841e-03,  ..., -2.1408e-03,
          1.8809e-03,  4.1119e-03]], device='cuda:1')
torch.Size([807]) torch.Size([807])
torch.Size([807]) torch.Size([807])
  Average validation loss: 0.36
Least Validation loss: 0.36185792088508606